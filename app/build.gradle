apply plugin: 'com.android.application'
/* Add the Fabric plugin: */
apply plugin: 'io.fabric'
/*Google Services*/
apply plugin: 'com.google.gms.google-services'



android {

// See https://developer.android.com/studio/publish/app-signing#secure-shared-keystore
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//Version Information backup and syncro
    def versionPropsFile = file('version.properties')
    def Properties versionProps = new Properties()


    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    }
    else {
        versionProps['VERSION_CODE']='0'
    }
    def code = versionProps['VERSION_CODE'].toInteger() + 1
    versionProps['VERSION_CODE']=code.toString()
    versionProps.store(versionPropsFile.newWriter(), null)


    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']

        }

    }
    externalNativeBuild {
        cmake {
            version "3.10.2"
        }
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
    
        applicationId "app.vanir"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode code
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
     
        // Fix a build error related to having log4j in the classpath.
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
                arguments = ["resourcePackageName": android.defaultConfig.applicationId]
            }

        }


        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    flavorDimensions "default"


        buildTypes {
        release {
            minifyEnabled true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            shrinkResources true
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + Calendar.getInstance().getTimeInMillis() + "L)"
            buildConfigField "String", "BUILD_NAME", "\"" + System.getenv("USER") + "\""

            if (System.getenv("storeFile") != null) {
                signingConfig signingConfigs.release
            }
            return true
        }
        debug {
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + Calendar.getInstance().getTimeInMillis() + "L)"
            buildConfigField "String", "BUILD_NAME", "\"" + System.getenv("USER") + "\""
            useProguard false
     
            minifyEnabled false
            shrinkResources false
            debuggable true
            jniDebuggable true
            zipAlignEnabled true
            multiDexEnabled true

        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets {
        main.java.srcDirs += '../third_party/sockslib/src/main/java/'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        if (System.getenv("NIGHTLY_BUILD")) {
            checkReleaseBuilds false
        }
        //Lint shouldn't exit the process when it discovers errors//
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
    productFlavors {
    }
}
repositories {

    maven {
        url 'test-repo'
    }
    maven {
        url '../gradle-plugin-repo'
    }
    maven {
        url '../firebase-repo'
    }
    maven {
        url '../sockslib-repo'
    }
}

dependencies {
    // Third-party dependency: OkHttp3
    implementation fileTree(include: ['JEOPS.jar', 'guava-26.0-android.jar', 'sdk-v1.0.0', 'log4j-core-2.10.0', 'maven-jar-plugin-3.1.1', 'kotlin-compiler-embeddable-1.3.11'], dir: 'libs')

   // implementation 'com.android.support:multidex:1.0.3'
    // Third-party test dependencies.
    implementation 'com.commonsware.cwac:provider:0.5.3'
    implementation 'com.google.android.gms:play-services-ads:17.1.2'
    implementation 'org.tukaani:xz:1.8'
    implementation 'ch.acra:acra-http:5.2.1'
    implementation 'ch.acra:acra-core:5.2.1'
    implementation 'ch.acra:acra-dialog:5.2.1'
    implementation 'ch.acra:acra-mail:5.2.1'
    implementation 'ch.acra:acra-toast:5.2.1'
    implementation 'ch.acra:acra-advanced-scheduler:5.2.1'
    implementation 'ch.acra:acra-javacore:5.2.1'
    implementation 'ch.acra:acra-notification:5.2.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    //Google Services & API V
    implementation 'com.google.android.gms:play-services-gcm:16.0.0'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20171018'
    testImplementation 'org.mockito:mockito-core:2.13.0'
    //ProgressBar
    implementation 'com.daimajia.numberprogressbar:library:1.4@aar'
    // Required for instrumented tests
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:monitor:1.1.1'
    androidTestImplementation 'androidx.test:orchestrator:1.1.1'
    implementation 'com.instabug.library:instabug:8.0.15.6-SNAPSHOT'
    // UI libraries.
    implementation 'com.google.android.material:material:1.1.0-alpha02'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.fragment:fragment:1.0.0'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'

    // instead of design UIX
    implementation 'androidx.appcompat:appcompat:1.0.2'
 
    implementation 'androidx.core:core:1.0.1'
 
    implementation 'androidx.annotation:annotation:1.0.1'

    // instead of support-v7
    implementation 'org.apache.commons:commons-compress:1.18'
    implementation 'commons-net:commons-net:3.6'
    implementation 'com.google.android.gms:play-services-stats:16.0.1'
    implementation 'com.github.zafarkhaja:java-semver:0.9.0'
    implementation 'org.unbescape:unbescape:1.1.6.RELEASE'
    implementation 'org.msgpack:msgpack:0.6.12'
    implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
    implementation 'org.tukaani:xz:1.8'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


    //Google and IOT
    implementation 'com.google.android.gms:play-services-nearby:16.0.0'
    // For Firebase , etc.

    // For Sockslib
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation 'com.commonsware.cwac:netsecurity:0.4.5'
    implementation 'com.squareup.okio:okio:2.1.0'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:slf4j-android:1.7.25'
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    


}
// For Firebase Analytics
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
